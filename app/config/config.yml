imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en

framework:
    #esi:             ~
    translator:      { fallbacks: ["%locale%"] }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    #serializer:      { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # http://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id:  session.handler.native_file
        save_path:   "%kernel.root_dir%/../var/sessions/%kernel.environment%"
    fragments:       ~
    http_method_override: true
    assets: ~

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"

# Doctrine Configuration
doctrine:
    dbal:
        driver:   pdo_mysql
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: "%kernel.root_dir%/data/data.db3"
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #     path:     "%database_path%"

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true
        filters:
            softdeleteable:
                class: Gedmo\SoftDeleteable\Filter\SoftDeleteableFilter
                enabled: true

stof_doctrine_extensions:
    orm:
        default:
            timestampable: true
            sluggable: true
            blameable: true
            softdeleteable: true
            sortable: true

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }

jms_serializer:
    metadata:
        directories:
            FOSUB:
                namespace_prefix: "FOS\\UserBundle"
                path: '%kernel.root_dir%/serializer/FOSUB'

fos_user:
    db_driver: orm
    firewall_name: main
    user_class: SoulDock\UserBundle\Entity\User
    registration:
        confirmation:
            enabled: true
            template: 'SoulDockUserBundle:Registration:confirmation.email.twig'
    service:
        mailer: soul_dock.user.mailer.twig_swift

fos_oauth_server:
    db_driver: orm
    client_class:        SoulDock\RestBundle\Entity\Client
    access_token_class:  SoulDock\RestBundle\Entity\AccessToken
    refresh_token_class: SoulDock\RestBundle\Entity\RefreshToken
    auth_code_class:     SoulDock\RestBundle\Entity\AuthCode
    service:
        user_provider: fos_user.user_provider.username

fos_rest:
    routing_loader:
        default_format: json
    body_converter:
        enabled: true
    body_listener:
        decoders:
            json: fos_rest.decoder.json
            xml: fos_rest.decoder.xml
    format_listener:
        enabled: true
        rules:
            - { path: '^/', priorities: ['json', 'xml', 'html'], fallback_format: 'html' }
    serializer:
        serialize_null: true
    view:
        view_response_listener: 'force'
    param_fetcher_listener: 'force'

nelmio_api_doc:
    sandbox:
        authentication:
            delivery: http
            type:     bearer
        enabled:  true
        endpoint: http://srest.com
        accept_type: application/json
        body_format:
            formats: [ form, json ]
        request_format:
            formats:
                json: application/json
                xml: application/xml
            method: format_param
        entity_to_choice: false

hautelook_alice:
    db_drivers:
        orm: ~
    locale: en_US
    seed: 1
    persist_once: false

sonata_block:
    default_contexts: [cms]
    blocks:
        sonata.admin.block.admin_list:
            contexts:   [admin]
        sonata.admin.block.search_result:
            contexts:   [admin]

sonata_admin:
    title: SoulDock
    security:
        handler: sonata.admin.security.handler.role
    dashboard:
        groups:
            settings:
                label: group.label.settings
                label_catalogue: SoulDockAdminBundle
                icon: <i class="fa fa-cogs"></i>
                items:
            user:
                label: group.label.user
                label_catalogue: SoulDockAdminBundle
                icon: <i class="fa fa-user"></i>
                items:
                    - sd.user.admin.user
            survey:
                label: group.label.survey
                label_catalogue: SoulDockAdminBundle
                icon: <i class="fa fa-list-ul"></i>
                items:
                    - sd.survey.admin.survey
                    - sd.survey.admin.question
                    - sd.survey.admin.answer
            content:
                label: group.label.content
                label_catalogue: SoulDockAdminBundle
                icon: <i class="fa fa-folder"></i>
                items:
                    - sd.tag.admin.tag
                    - sd.paper.admin.paper